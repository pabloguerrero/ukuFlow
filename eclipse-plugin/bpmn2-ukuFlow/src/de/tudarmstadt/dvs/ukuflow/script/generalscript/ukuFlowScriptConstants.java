/* Generated By:JavaCC: Do not edit this line. ukuFlowScriptConstants.java */
package de.tudarmstadt.dvs.ukuflow.script.generalscript;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ukuFlowScriptConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PREDEFINED_CONSTANT = 5;
  /** RegularExpression Id. */
  int AND = 6;
  /** RegularExpression Id. */
  int OR = 7;
  /** RegularExpression Id. */
  int NOT = 8;
  /** RegularExpression Id. */
  int ADDITIVE = 9;
  /** RegularExpression Id. */
  int MULTICATIVE = 10;
  /** RegularExpression Id. */
  int BOOLEAN = 11;
  /** RegularExpression Id. */
  int TRUE = 12;
  /** RegularExpression Id. */
  int FALSE = 13;
  /** RegularExpression Id. */
  int AT_ = 14;
  /** RegularExpression Id. */
  int SCOPE_DESC = 15;
  /** RegularExpression Id. */
  int TTL = 16;
  /** RegularExpression Id. */
  int LOCAL = 17;
  /** RegularExpression Id. */
  int SCOPE = 18;
  /** RegularExpression Id. */
  int VARIABLE = 19;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 20;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 21;
  /** RegularExpression Id. */
  int HEX_LITERAL = 22;
  /** RegularExpression Id. */
  int BINARY_LITERAL = 23;
  /** RegularExpression Id. */
  int IDENTIFIER = 24;
  /** RegularExpression Id. */
  int LETTER = 25;
  /** RegularExpression Id. */
  int DIGIT = 26;
  /** RegularExpression Id. */
  int EQUAL = 27;
  /** RegularExpression Id. */
  int UNEQUAL = 28;
  /** RegularExpression Id. */
  int GREATERTHAN = 29;
  /** RegularExpression Id. */
  int LESSTHAN = 30;
  /** RegularExpression Id. */
  int GREATEROREQUAL = 31;
  /** RegularExpression Id. */
  int LESSOREQUAL = 32;
  /** RegularExpression Id. */
  int STRING = 33;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
    "<PREDEFINED_CONSTANT>",
    "<AND>",
    "<OR>",
    "<NOT>",
    "<ADDITIVE>",
    "<MULTICATIVE>",
    "<BOOLEAN>",
    "<TRUE>",
    "<FALSE>",
    "\"@\"",
    "\"SCOPE\"",
    "\"TTL\"",
    "\"local\"",
    "<SCOPE>",
    "<VARIABLE>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<BINARY_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "<STRING>",
    "\"=\"",
    "\";\"",
    "\"(\"",
    "\")\"",
  };

}
